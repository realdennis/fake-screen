{"version":3,"sources":["src/win10-update/index.js"],"names":["render","update","startProgress","getProgress","progress","progressValue","sleep","Math","random","innerText","ms","Promise","res","setTimeout","findProgress","document","querySelector"],"mappings":";AAkCC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAlCD,IAAA,EAAA,EAAA,QAAA,sBAkCC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,MAAA,GAAA,YAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,QAAA,QAAA,GAAA,KAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,KAAA,EAAA,UAAA,OAAA,IAAA,QAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,OAAA,MAjCD,QAAA,wBAEO,IAAMA,EAAS,WAEbC,OADPC,IACOD,EAAP,SAEaC,SAAAA,IA2Bd,OAAA,EAAA,MAAA,KAAA,WAAA,SAAA,IAAA,OAAA,EAAA,EA3BD,mBAAA,KAAA,SAAA,IAAA,IAAA,EAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EACyBC,OADzB,EAAA,KAAA,EACyBA,IADzB,KAAA,EACQC,EADR,EAAA,KAEMC,EAAgB,EAFtB,KAAA,EAIUC,OAJV,EAAA,KAAA,EAIUA,EAAsB,IAAhBC,KAAKC,SAAkB,KAJvC,KAAA,EAKIJ,EAASK,UAAYJ,IALzB,EAAA,KAAA,EAAA,MAAA,KAAA,GAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,UA2BC,MAAA,KAAA,WAlBD,SAASC,EAAMI,GACN,OAAA,IAAIC,QAAQ,SAAAC,GAAOC,OAAAA,WAAWD,EAAKF,KAG7BP,SAAAA,IAcd,OAAA,EAAA,MAAA,KAAA,WAAA,SAAA,IAAA,OAAA,EAAA,EAdD,mBAAA,KAAA,SAAA,IAAA,IAAA,EAAA,OAAA,mBAAA,KAAA,SAAA,GAAA,OAAA,OAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EACMC,EAAW,KADjB,KAAA,EAEUA,GAAAA,EAFV,CAAA,EAAA,KAAA,EAAA,MAGqBU,OAHrB,EAAA,KAAA,EAGqBA,IAHrB,KAAA,EAGIV,EAHJ,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,KAAA,EAKSA,OAAAA,EAAAA,OAAAA,SAAAA,GALT,KAAA,EAAA,IAAA,MAAA,OAAA,EAAA,SAAA,EAAA,UAcC,MAAA,KAAA,WAPD,SAASU,IACA,OAAA,IAAIH,QAAQ,SAAAC,GACjBC,WAAW,WACLT,IAAAA,EAAWW,SAASC,cAAc,aACtCJ,EAAIR,OAGT,QAAA,OAAA","file":"win10-update.c76eed96.map","sourceRoot":"..","sourcesContent":["import update from './update-only.pug';\nimport '../win10/update.scss';\n\nexport const render = () => {\n  startProgress();\n  return update;\n};\nasync function startProgress() {\n  const progress = await getProgress();\n  let progressValue = 1;\n  while (true) {\n    await sleep(Math.random() * 5000 + 5000);\n    progress.innerText = progressValue++;\n  }\n}\n\nfunction sleep(ms) {\n  return new Promise(res => setTimeout(res, ms));\n}\n\nasync function getProgress() {\n  let progress = null;\n  while (!progress) {\n    progress = await findProgress();\n  }\n  return progress;\n}\nfunction findProgress() {\n  return new Promise(res => {\n    setTimeout(() => {\n      let progress = document.querySelector('#progress');\n      res(progress);\n    });\n  });\n}\n"]}